# PSet 2 {-}

Welcome to your second problem set! In this assignment, you will import and tidy real data to perform exploratory analyses. We will replicate parts of the analysis from a recent paper at the interface between ecology and evolution. You can read the paper [here](https://www.nature.com/articles/s41467-022-30090-4). 

## What to Turn In

- Submission Package: A folder (or zip file) that contains:
  - RStudio project.
  - Your code for data wrangling and analysis.
  - The two final publication-ready figures.
- Deadline: February 23rd, 2025

## Assignment Instructions

1. Project Setup

   - **Create a New Project**: Start a new RStudio project.
   - **Download Data**:
     - Download the full data archive from [here](http://clsong.com/assets/class_data/PSet2.zip).
     - This archive contains two CSV files:
       - Snail Data: `PSet2_snail.csv`
       - Vegetation Zone Totals: `PSet2_vegzonetotals.csv`
   - **Organize Your Files**: Place the downloaded CSV files in a subfolder named `data` within your project directory.

2. Data Import
   
    - Load the Data: Import both CSV files into R. 
    - Hint: Use RSudio import shortcut and then copy-paste the associated `read_csv()` code chunk into your script.

3. Data Cleaning: Filter Out Specific Islands

   - In the `data_snail` tibble, remove all rows where the island column is "CH", "ED", or "GA".
   - Hint: Think whether we should use the `filter()` or `select()` verb?
  
4. Join Data: 

   - Join `data_snail` with `data_veg` using the common variable `island`.
   - Hint: Consider whether a `left_join()`, `full_join()`, or another type of join is most appropriate.

5. Data Transformation: Normalize Species Diversit
   
   - The variable `spdiv` (species diversity) needs to be normalized based on habitat type:

     - If habitat is "Arid", compute: `normalized_spdiv = spdiv / AridTotal`
     - If habitat is "Humid", compute: `normalized_spdiv = spdiv / HumidTotal`

   - Hint: Use `mutate()` together with `if_else()` or `case_when()` to create a new normalized species diversity variable.

6. Data Visualization: Replicate Figure 5 from the Paper

   - Create a scatter plot using `ggplot2` that shows the relationship between the normalized species diversity (`normalized_spdiv`) and functional diversity (`funcdiv`).
   - Instead of using `geom_point()`, use `geom_text()` so that each data point is labeled with the island.
   - Aim to reproduce or even improve upon the appearance of Figure 5 from the paper.

7. Create One More Publication-Quality Figure:

   - Explpre another interesting relationship in the dataset (such as amount or distribution).
   - Use what you have learned in the class to make the figure informative and aesthetically pleasing.



<!-- ## **Pre-processing long-term ecological data**

We will use the data from a classic, long-term study. The data is from a coastal community barnacles, mussels, and algae for more than 20 years. The data also includes temperature data. We will practice the following steps:

Download the data from the publisher [website](https://www.pnas.org/doi/10.1073/pnas.1421968112#supplementary-materials). The file is called `pnas.1421968112.sd01.xlsx`. And then import the data. Use RStudio to make the import as easy as possible.


::: {.callout-tip collapse="true"}
## Example structure
```{r}
#| eval: false
library(tidyverse)
library(readxl) # <1>
library(lubridate) # <2>

data_ts <- read_excel("_____", col_types = _______) |>
    janitor::clean_names() |>
    mutate(date = ymd(date) - years(1900)) # <3>


data_temperature <- read_excel("______",
    sheet = "______", col_types = c(_______)
) |>
    janitor::clean_names()
```
1. This package is to read excel files.
2. This package is to better handle dates.
3. This is to convert the date to a date object.

:::

We then need to ioin the abundance data with the temperature data into a single data set. We then need to tidy the data (make all species columns into a long format). The result should look like this:

```{r}
#| echo: false
#| warning: false
library(tidyverse)
library(readxl)
library(lubridate)

data_ts <- read_excel("data/pnas.1421968112.sd01.xlsx",
    col_types = c(
        "date", "numeric", "skip",
        "skip", "numeric", "skip", "skip",
        "skip", "skip", "skip", "numeric",
        "skip", "skip"
    )
) |>
    janitor::clean_names() |>
    mutate(date = ymd(date) - years(1900))


data_temperature <- read_excel("data/pnas.1421968112.sd01.xlsx",
    sheet = "Temperature Data Fig.2A", col_types = c(
        "date", "numeric", "skip", "skip", "skip", "skip"
    )
) |>
    janitor::clean_names()

data <- data_ts |>
    left_join(data_temperature)

data |>
    pivot_longer(cols = -c(date, temperature_o_c), names_to = "species", values_to = "abundance") |>
    mutate(
        species = str_replace(species, "_percent", "")
    )
```

Lastly, analyze the correlation between temperature and abundance within each species.



```{r}
#| eval: false
#| echo: false
library(tidyverse)
library(readxl)
library(lubridate)

data_ts <- read_excel("data/pnas.1421968112.sd01.xlsx",
    col_types = c(
        "date", "numeric", "skip",
        "skip", "numeric", "skip", "skip",
        "skip", "skip", "skip", "numeric",
        "skip", "skip"
    )
) |>
    janitor::clean_names() |>
    mutate(date = ymd(date) - years(1900))


data_temperature <- read_excel("data/pnas.1421968112.sd01.xlsx",
    sheet = "Temperature Data Fig.2A", col_types = c(
        "date", "numeric", "skip", "skip", "skip", "skip"
    )
) |>
    janitor::clean_names()

data <- data_ts |>
    left_join(data_temperature)

data_long <- data |>
    pivot_longer(cols = -c(date, temperature_o_c), names_to = "species", values_to = "abundance")

data_long  |> 
    group_by(species) |> 
    summarise(
        cor = cor(temperature_o_c, abundance, use = "complete.obs")
    )

library(gghighlight)
ggthemr::ggthemr(palette = "fresh")

data_long %>%
    ggplot(aes(date, abundance)) +
    geom_line(aes(group = species, color = species)) +
    gghighlight(use_direct_label = F) +
    facet_wrap(~species) +
    jtools::theme_nice() +
    labs(
        x = "Time",
        y = "Abundance"
    ) +
    theme(
        legend.position = "none"
    )

data_long %>%
    ggplot(aes(temperature_o_c, abundance)) +
    geom_point(aes(color = species)) +
    facet_wrap(~species) +
    labs(
        x = "Temperature (Â°C)",
        y = "Abundance"
    ) +
    jtools::theme_nice() +
    theme(
        legend.position = "none"
    )
```


## **Your turn** -->